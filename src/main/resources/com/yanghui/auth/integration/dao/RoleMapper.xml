<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yanghui.auth.integration.dao.RoleMapper" >

  <sql id="Base_Column_List" >
    id, code, name, description, status, remark, create_by, create_time, update_by, update_time
  </sql>
  
  <resultMap id="BaseResultMap" type="com.yanghui.auth.biz.model.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  
  <select id="selectByKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="Base_Column_List" /> from role where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from role where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteRoleResource" parameterType="java.lang.Integer" >
    delete from role_resource where role_id = #{roleId}
  </delete>
  
  <insert id="insert" parameterType="com.yanghui.auth.biz.model.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role (code,name,description,status,remark,create_by,create_time,update_by,update_time)
    values (#{code}, #{name},#{description},#{normalStatus},#{remark},#{currentAccount}, #{currentTime}, #{currentAccount},#{currentTime})
  </insert>
  
  <insert id="insertRoleResource" parameterType="com.yanghui.auth.biz.model.RoleResource">
    insert into role_resource (role_id,res_id,status,remark,create_by,create_time,update_by,update_time)
    values (#{roleId}, #{resId},#{normalStatus},#{remark},#{currentAccount}, #{currentTime}, #{currentAccount},#{currentTime})
  </insert>
  
  <update id="update" parameterType="com.yanghui.auth.biz.model.Role" >
    update role
    <set>
    	<if test="code != null"> code = #{code},</if>
    	<if test="name != null"> name = #{name},</if>
    	<if test="description != null"> description = #{description},</if>
    	<if test="status != null"> status = #{status},</if>
    	update_by = #{currentAccount},
  		update_time = #{currentTime}
    </set>
     where id = #{id}
  </update>
  <select id="getAll" resultMap="BaseResultMap" parameterType="map" >
    select <include refid="Base_Column_List" /> from role
    <where>
    	<if test="code != null"> and code = #{code}</if>
    	<if test="name != null"> and name = #{name}</if>
    	<if test="description != null"> and description = #{description}</if>
    </where>
  </select>
</mapper>