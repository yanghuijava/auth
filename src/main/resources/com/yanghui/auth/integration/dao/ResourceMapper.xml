<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yanghui.auth.integration.dao.ResourceMapper" >

  <sql id="Base_Column_List" >
    id, pid, type, name, code, index_, action, url, icon, status, remark, create_by,create_time, update_by, update_time
  </sql>
  <resultMap id="BaseResultMap" type="com.yanghui.auth.biz.model.Resource" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="index_" property="index" jdbcType="INTEGER" />
    <result column="action" property="action" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="selectAll" parameterType="map" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from resource
  	<where>
  		<if test="pid != null"> and pid = #{pid}</if>
  		<if test="type != null"> and type = #{type}</if>
  		<if test="name != null"> and name = #{name}</if>
  		<if test="code != null"> and code = #{code}</if>
  		<if test="action != null"> and action = #{action}</if>
  		<if test="url != null"> and url = #{url}</if>
  	</where>
  	order by index_
  </select>
  
  <select id="selectByKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="Base_Column_List" /> from resource  where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from resource where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.yanghui.auth.biz.model.Resource" useGeneratedKeys="true" keyProperty="id">
    insert into resource (pid, type,name, code, index_,action, url, icon,
    status, remark, create_by,create_time, update_by, update_time) values 
    (#{pid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{index,jdbcType=INTEGER}, 
      #{action,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{normalStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{currentAccount,jdbcType=VARCHAR}, 
      #{currentTime,jdbcType=TIMESTAMP}, #{currentAccount,jdbcType=VARCHAR}, #{currentTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="update" parameterType="com.yanghui.auth.biz.model.Resource" >
    update resource
    <set>
    	<if test="pid != null"> pid = #{pid},</if>
  		<if test="type != null"> type = #{type},</if>
  		<if test="name != null"> name = #{name},</if>
  		<if test="code != null"> code = #{code},</if>
  		<if test="action != null"> action = #{action},</if>
  		<if test="url != null"> url = #{url},</if>
  		<if test="icon != null"> icon = #{icon},</if>
  		<if test="index != null"> index_ = #{index},</if>
  		<if test="status != null"> status = #{status},</if>
  		<if test="remark != null"> remark = #{remark},</if>
  		update_by = #{currentAccount},
  		update_time = #{currentTime}
    </set>
     where id = #{id}
  </update>
  
  <select id="selectUserSubs" parameterType="map" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from resource
  	<where>
  		<if test="parentCode != null"> and pid in (select id from resource where code = #{parentCode})</if>
  		<if test="types != null"> and type in <foreach collection="types" item="item" open="(" separator="," close=")" >#{item}</foreach></if>
  		<if test="userId != null"> and id in(select res_id from role_resource where role_id in( select role_id from user_role where user_id = #{userId}))</if>
  	</where>
  	order by index_
  </select>
  
  <select id="getUserAllResource" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select res.* from resource res join role_resource rr on res.id = rr.res_id where rr.role_id in
    (select r.id from role r join user_role ur on r.id = ur.role_id where ur.user_id = #{userId})
  </select>
  
  <select id="getRoleAllResource" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select distinct res.* from resource res join role_resource rr on res.id = rr.res_id where rr.role_id = #{roleId}
  </select>
</mapper>